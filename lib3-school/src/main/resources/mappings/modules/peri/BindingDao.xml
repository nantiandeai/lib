<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lianyitech.modules.peri.dao.BindingDao">

    <sql id="BindingColumns">
                a.id AS "id",
                a.org_id AS "orgId",
                a.peri_directory_id AS "periDirectoryId",
                a.collection_site_id AS "collectionSiteId",
                a.publishing_year AS "publishingYear",
                b.publishing_name AS "publishingName",
                a.title AS "title",
                a.binding_num AS "bindingNum",
                a.price AS "price",
                a.bar_code AS "barcode",
                a.librarsort_code AS "librarsortCode",
                a.book_time_no AS "bookTimeNo",
                a.ass_no AS "assNo",
                a.som_no AS "somNo",
                a.check_status AS "checkStatus",
                a.status AS "status",
                a.create_by AS "createBy",
                a.create_date AS "createDate",
                a.update_by AS "updateBy",
                a.update_date AS "updateDate",
                a.remarks AS "remarks",
                a.del_flag AS "delFlag"
    </sql>

    <sql id="bindinglistJoins">

    </sql>

    <select id="findList" resultType="Binding">
        select  a.id as "id",
                a.org_id as "orgId",
                d.issn as "issn",
                d.peri_num as "periNum",
                d.publishing_name as "publishingName",
                a.peri_directory_id as "periDirectoryId",
                a.collection_site_id as "collectionSiteId",
                a.publishing_year as "publishingYear",
                a.title as "title",
                a.binding_num as "bindingNum",
                a.price as "price",
                a.bar_code as "barcode",
                a.librarsort_code as "librarsortCode",
                a.book_time_no as "bookTimeNo",
                a.ass_no as "assNo",
                a.som_no as "somNo",
                a.check_status as "checkStatus",
                decode(a.status,0,'在馆','1','借出','2','剔旧','3','报废','4','丢失','5','预借','在馆') as "status",
                a.create_by as "createBy",
                a.create_date as "createDate",
                b.name as "collectionSiteName",
                (select  case when count(-1)>0 then 1 else 0  end from circulate_bill t  where t.bar_code = a.bar_code and t.org_id = a.org_id and t.del_flag = '0')as "likeBoo",
                d.email_num as "emailNum"
        from peri_binding a left join sys_collection_site b on (a.collection_site_id = b.ID and b.del_flag = '0' and b.org_id = #{orgId})
        left join peri_directory d on a.peri_directory_id =d.id
        where a.del_flag = '0'
        <if test="periDirectoryId != null and periDirectoryId != ''">
            and a.peri_directory_id = #{periDirectoryId}
        </if>
        <if test="issn != null and issn != ''">
            and d.issn like '%'||#{issn}||'%'
        </if>
        <if test="title != null and title != ''">
            and d.title like '%'||#{title}||'%'
        </if>
        <if test="collectionSiteId != null and collectionSiteId != ''">
            and a.collection_site_id like '%'||#{collectionSiteId}||'%'
        </if>
        <if test="librarsortCode != null and librarsortCode != ''">
            and a.librarsort_code '%'||#{librarsortCode}||'%'
        </if>
        <if test="periNum != null and periNum != ''">
            and d.peri_num like '%'||#{periNum}||'%'
        </if>
        <if test="publishingName != null and publishingName != ''">
            and d.publishing_name like '%'||#{publishingName}||'%'
        </if>
        <if test="status != null and status != ''">
            and a.status = #{status}
        </if>
        <choose>
            <when test="startBarCode != null and startBarCode != '' and endBarCode != null and endBarCode != ''">
                <![CDATA[
		       		and to_number(REGEXP_SUBSTR(a.bar_code, '[[:digit:]]+')) >= to_number(REGEXP_SUBSTR(#{startBarCode}, '[[:digit:]]+')) and length(a.bar_code) = length(#{startBarCode})
                    and to_number(REGEXP_SUBSTR(a.bar_code, '[[:digit:]]+')) <= to_number(REGEXP_SUBSTR(#{endBarCode}, '[[:digit:]]+')) and length(a.bar_code) = length(#{endBarCode})
                    and nvl(REGEXP_SUBSTR(a.bar_code, '[[:alpha:]]+'), '0') = nvl(REGEXP_SUBSTR(#{startBarCode}, '[[:alpha:]]+'), '0')
                    and nvl(REGEXP_SUBSTR(a.bar_code, '[[:alpha:]]+'), '0') = nvl(REGEXP_SUBSTR(#{endBarCode}, '[[:alpha:]]+'), '0')
		         ]]>
            </when>
            <when test="startBarCode != null and startBarCode != ''">
                <![CDATA[
                and a.bar_code = #{startBarCode}
                 ]]>
            </when>
            <when test="endBarCode != null and endBarCode != ''">
                <![CDATA[
                and a.bar_code = #{endBarCode}
                 ]]>
            </when>
        </choose>
        <choose>
            <when test="publishingYearStart != null and publishingYearStart != '' and publishingYearEnd != null and publishingYearEnd != ''">
                <![CDATA[
		       		and a.publishing_year >= #{publishingYearStart}
		       		and a.publishing_year <= #{publishingYearEnd}
		       	]]>
            </when>
            <when test="publishingYearStart != null and publishingYearStart != ''">
                <![CDATA[
                and a.publishing_year = #{publishingYearStart}
                 ]]>
            </when>
            <when test="publishingYearEnd != null and publishingYearEnd != ''">
                <![CDATA[
                and a.publishing_year = #{publishingYearEnd}
                ]]>
            </when>
        </choose>
        <!-- 数据范围过滤-->
        and a.org_id = #{orgId}
        <choose>
            <when test="orderBy != null and orderBy != ''">
                order by ${orderBy}
            </when>
            <otherwise>
                order by a.update_date desc
            </otherwise>
        </choose>
    </select>

    <select id="get" resultType="Binding">
        select a.id AS "id",
               a.org_id AS "orgId",
               a.peri_directory_id AS "periDirectoryId",
               a.collection_site_id AS "collectionSiteId",
               a.publishing_year AS "publishingYear",
               a.title AS "title",
               a.binding_num AS "bindingNum",
               a.price AS "price",
               a.bar_code AS "barcode",
               a.librarsort_code AS "librarsortCode",
               a.book_time_no AS "bookTimeNo",
               a.ass_no AS "assNo",
               a.som_no AS "somNo",
               a.check_status AS "checkStatus",
               a.status AS "status",
               a.create_by AS "createBy",
               a.create_date AS "createDate",
               a.update_by AS "updateBy",
               a.update_date AS "updateDate",
               a.remarks AS "remarks",
               a.del_flag AS "delFlag"
        from PERI_BINDING a
        where a.id = #{id}
        AND a.org_id = #{orgId}
        and a.DEL_FLAG = '0'
    </select>

    <insert id="insert">
        INSERT INTO PERI_BINDING(
            id,
            org_id,
            peri_directory_id,
            collection_site_id,
            publishing_year,
            title,
            binding_num,
            price,
            bar_code,
            librarsort_code,
            book_time_no,
            ass_no,
            som_no,
            check_status,
            status,
            create_by,
            create_date,
            update_by,
            update_date,
            remarks,
            del_flag
        ) VALUES (
            #{id},
            #{orgId},
            #{periDirectoryId},
            #{collectionSiteId},
            #{publishingYear},
            #{title},
            #{bindingNum},
            #{price},
            #{barcode},
            #{librarsortCode},
            #{bookTimeNo},
            #{assNo},
            #{somNo},
            #{checkStatus},
            '0',
            #{createBy},
            #{createDate},
            #{updateBy},
            #{updateDate},
            #{remarks},
            #{delFlag}
        )
    </insert>

    <update id="update">
        UPDATE PERI_BINDING
        SET collection_site_id = #{collectionSiteId},
            publishing_year = #{publishingYear},
            binding_num = #{bindingNum},
            price = #{price},
            book_time_no = #{bookTimeNo},
            update_by = #{updateBy},
            update_date = #{updateDate},
            remarks = #{remarks}
        WHERE id = #{id}
    </update>

    <update id="delete" parameterType="Map">
        UPDATE PERI_BINDING
        SET del_flag = '1',
        update_date = #{updateDate}
        WHERE id IN
        <foreach item="id" collection="idList" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!--已合订期刊-->
    <select id="findBinding" parameterType="Binding" resultType="Binding">
        select  a.id AS "id",
                a.org_id AS "orgId",
                a.peri_directory_id AS "periDirectoryId",
                a.collection_site_id AS "collectionSiteId",
                a.publishing_year AS "publishingYear",
                a.title AS "title",
                a.binding_num AS "bindingNum",
                a.price AS "price",
                a.bar_code AS "barcode",
                a.librarsort_code AS "librarsortCode",
                a.book_time_no AS "bookTimeNo",
                a.ass_no AS "assNo",
                a.som_no AS "somNo",
                a.check_status AS "checkStatus",
                a.status AS "status",
                a.create_by AS "createBy",
                a.create_date AS "createDate",
                a.update_by AS "updateBy",
                a.update_date AS "updateDate",
                a.remarks AS "remarks",
                a.del_flag AS "delFlag",
                b.name     AS "collectionSiteName"
        from PERI_BINDING a
        left join SYS_COLLECTION_SITE b
        on (a.collection_site_id = b.id and b.del_flag = '0' and b.org_id = #{orgId})
        where a.del_flag = '0'
        <!-- 数据范围过滤-->
        and a.org_id = #{orgId}
        <if test="periDirectoryId != '' and periDirectoryId != null">
            and a.peri_directory_id = #{periDirectoryId}
        </if>
        <if test="checkStatus != '' and checkStatus != null">
            and a.check_status = #{checkStatus}
        </if>
        <if test="title != '' and title != null">
            and a.title like '%'||#{title}||'%'
        </if>
        <choose>
            <when test="startBarCode != null and startBarCode != '' and endBarCode != null and endBarCode != ''">
                <![CDATA[
		       		and to_number(REGEXP_SUBSTR(a.bar_code, '[[:digit:]]+')) >= to_number(REGEXP_SUBSTR(#{startBarCode}, '[[:digit:]]+')) and length(a.bar_code) = length(#{startBarCode})
                    and to_number(REGEXP_SUBSTR(a.bar_code, '[[:digit:]]+')) <= to_number(REGEXP_SUBSTR(#{endBarCode}, '[[:digit:]]+')) and length(a.bar_code) = length(#{endBarCode})
                    and nvl(REGEXP_SUBSTR(a.bar_code, '[[:alpha:]]+'), '0') = nvl(REGEXP_SUBSTR(#{startBarCode}, '[[:alpha:]]+'), '0')
                    and nvl(REGEXP_SUBSTR(a.bar_code, '[[:alpha:]]+'), '0') = nvl(REGEXP_SUBSTR(#{endBarCode}, '[[:alpha:]]+'), '0')
		         ]]>

            </when>
            <when test="startBarCode != null and startBarCode != ''">
                and a.bar_code = #{startBarCode}
            </when>
            <when test="endBarCode != null and endBarCode != ''">
                and a.bar_code = #{endBarCode}
            </when>
        </choose>
        <choose>
            <when test="publishingYearStart != null and publishingYearStart != '' and publishingYearEnd != null and publishingYearEnd != ''">
                <![CDATA[
                     and a.publishing_year >= #{publishingYearStart}
                     and a.publishing_year <= #{publishingYearEnd}
                ]]>
            </when>
            <when test="publishingYearStart != null and publishingYearStart != ''">
                and a.publishing_year = #{publishingYearStart}
            </when>
            <when test="publishingYearEnd != null and publishingYearEnd != ''">
                and a.publishing_year = #{publishingYearEnd}
            </when>
        </choose>
        <if test="collectionSiteId != '' and collectionSiteId != null">
            and b.id = #{collectionSiteId}
        </if>
    </select>

    <!--查询过刊是否存在流通记录-->
    <select id="checkBindingBarcode" parameterType="Map" resultType="Binding">
        select *
        from PERI_BINDING t
        inner join CIRCULATE_BILL b
        on (t.bar_code = b.bar_code and b.del_flag = '0' and b.org_id = #{orgId})
        where t.del_flag = '0'
        and t.org_id = #{orgId}
        and t.bar_code IN
        <foreach item="barcode" collection="list" open="(" separator="," close=")">
            #{barcode}
        </foreach>
    </select>

    <!--查询过刊是通过什么方式来的 0登记 1合并-->
    <select id="checkStatus" parameterType="Map" resultType="Binding">
        select *
        from PERI_BINDING t
        where t.del_flag = '0'
        and t.check_status = '1'
        and t.org_id = #{orgId}
        and t.bar_code IN
        <foreach item="barcode" collection="list" open="(" separator="," close=")">
            #{barcode}
        </foreach>
    </select>

    <!--根据条码查询过刊信息-->
    <select id="getBinding" resultType="Binding" parameterType="Binding">
        select
            t.id as id,
            t.bar_code barcode,
            t.title as title,
            t.librarsort_code as librarsortCode,
            t.book_time_no as bookTimeNo,
            t.ass_no as assNo,
            t.som_no as somNo,
            t.create_date as createDate
        from PERI_BINDING t
        where t.del_flag = '0'
        and t.bar_code = #{barcode}
        and t.org_id = #{orgId}
    </select>

    <!--书标打印的接口-->
    <select id="findAllList" parameterType="Binding" resultType="Binding">
        SELECT
        <include refid="BindingColumns"/>
        FROM PERI_BINDING a
        JOIN peri_directory b ON (a.peri_directory_id = b.id AND b.del_flag='0' and b.org_id = #{orgId})
        LEFT JOIN SYS_COLLECTION_SITE c ON (a.collection_site_id = c.id AND c.del_flag='0' and c.org_id = #{orgId})
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            <!-- 数据范围过滤-->
            and a.org_id = #{orgId}
            <if test="collectionSiteName != null and collectionSiteName != ''">
                and c.NAME = #{collectionSiteName}
            </if>
            <choose>
                <when test="startBarCode != null and startBarCode != '' and endBarCode != null and endBarCode != ''">
                    <![CDATA[
		       		and to_number(REGEXP_SUBSTR(a.bar_code, '[[:digit:]]+')) >= to_number(REGEXP_SUBSTR(#{startBarCode}, '[[:digit:]]+')) and length(a.bar_code) = length(#{startBarCode})
                    and to_number(REGEXP_SUBSTR(a.bar_code, '[[:digit:]]+')) <= to_number(REGEXP_SUBSTR(#{endBarCode}, '[[:digit:]]+')) and length(a.bar_code) = length(#{endBarCode})
                    and nvl(REGEXP_SUBSTR(a.bar_code, '[[:alpha:]]+'), '0') = nvl(REGEXP_SUBSTR(#{startBarCode}, '[[:alpha:]]+'), '0')
                    and nvl(REGEXP_SUBSTR(a.bar_code, '[[:alpha:]]+'), '0') = nvl(REGEXP_SUBSTR(#{endBarCode}, '[[:alpha:]]+'), '0')
		            ]]>
                </when>
                <when test="startBarCode != null and startBarCode != ''">
                    <![CDATA[
                    and a.bar_code = #{startBarCode}
                     ]]>
                </when>
                <when test="endBarCode != null and endBarCode != ''">
                    <![CDATA[
                    and a.bar_code = #{endBarCode}
                     ]]>
                </when>
            </choose>
            <choose>
                <when test="createDateStart != null and createDateStart != '' and createDateEnd != null and createDateEnd != ''">
                    <![CDATA[
                     and a.create_date >= to_timestamp(#{createDateStart}||' 00:00:00','yyyy-MM-dd hh24.mi.ss')
                     and a.create_date <= to_timestamp(#{createDateEnd}||' 23:59:59','yyyy-MM-dd hh24.mi.ss')
                    ]]>
                </when>
                <when test="createDateStart != null and createDateStart != ''">
                    <![CDATA[
                     and a.create_date >= to_timestamp(#{createDateStart}||' 00:00:00','yyyy-MM-dd hh24.mi.ss')
                     and a.create_date <= to_timestamp(#{createDateStart}||' 23:59:59','yyyy-MM-dd hh24.mi.ss')
                    ]]>
                </when>
                <when test="createDateEnd != null and createDateEnd != ''">
                    <![CDATA[
                     and a.create_date >= to_timestamp(#{createDateEnd}||' 00:00:00','yyyy-MM-dd hh24.mi.ss')
                     and a.create_date <= to_timestamp(#{createDateEnd}||' 23:59:59','yyyy-MM-dd hh24.mi.ss')
                    ]]>
                </when>
            </choose>
            <if test="librarsortCode != null and librarsortCode != ''">
                and a.librarsort_code LIKE '%'||#{librarsortCode}||'%'
            </if>
            <if test="issn != null and issn != ''">
                and b.issn LIKE '%'||#{issn}||'%'
            </if>
            <if test="title != null and title != ''">
                and b.title LIKE '%'||#{title}||'%'
            </if>
            <if test="author != null and author != ''">
                and b.author LIKE '%'||#{author}||'%'
            </if>
            <if test="periNum != null and periNum != ''">
                and b.peri_num LIKE '%'||#{periNum}||'%'
            </if>
            <if test="publishingName != null and publishingName != ''">
                and b.publishing_name LIKE '%'||#{publishingName}||'%'
            </if>
            <if test="libSortCodeList != null  and libSortCodeList.size() > 0 ">
                and SUBSTR(a.librarsort_code, 0, 1) in
                <foreach item="item" collection="libSortCodeList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <choose>
                <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                    ORDER BY ${page.orderBy}, a.rowid
                </when>
                <otherwise>
                    order by a.librarsort_code, a.rowid
                </otherwise>
            </choose>
        </where>
    </select>

    <update id="updateByBillType" parameterType="Map" >
        update peri_binding c
        set c.status     = decode(#{type},
        '0', '1',
        '1', '0',
        '2', '4',
        '3', '2',
        '4', '3',
        '6', '5',
        '10', '0',
        c.status),
        c.is_renew   = decode(#{type}, '7', '1','1','', c.is_renew),
        c.is_stained = decode(#{type}, '8', '1', c.is_stained),
        <!--加了个判断 ，如果取消预约9那么改成取消0-->
        c.is_order   = decode(#{type}, '5', '1','6','0','9','0', c.is_order),<!--如果是预借的情况下从预约自动变成预借修改此状态为0-->
        c.UPDATE_BY =#{updateBy}, <!--修改人-->
        c.UPDATE_DATE = #{updateDate} <!--修改时间为当前时间-->
        where c.bar_code = #{barcode} and c.del_flag='0'
        <if test="orgId != null and orgId != ''">
            AND c.org_id = #{orgId}
        </if>
    </update>

    <select id="isPrei" resultType="java.lang.Boolean">
        select decode(count(1),0,0,1) from peri_binding where del_flag='0' and org_id = #{orgId} and bar_code = #{barcode}
    </select>

    <select id="findPeriByBarCode" parameterType="Copy" resultType="Map">
        select t1.id as "copyId",
        t1.status as "status",
        t2.title as "title",
        nvl(t2.sub_title,'') as "subTitle",
        t1.bar_code as "barCode",
        t2.author as "author",
        t2.librarsort_code as "librarsortCode",
        t1.book_time_no as "tanejiNo",
        t1.ass_no as "assNo",
        t2.publishing_name as "publishingName",
        t1.price as "price"
        from peri_binding t1
        inner join peri_directory t2 on t1.peri_directory_id = t2.id
        where t1.bar_code = #{barcode} and t1.org_id = #{orgId} and t2.org_id = #{orgId} and t1.del_flag='0' and t2.del_flag='0' and rownum=1
    </select>

    <select id="findStatusByBarCode" resultType="java.util.Map">
        select decode(a.status,null,'0',a.status) as "status",b.stock_attr as "stockAttr"
        from peri_binding a left join sys_collection_site b on (a.collection_site_id = b.id and b.del_flag='0' and b.org_id = #{orgId})
        where a.org_id = #{orgId} and a.bar_code = #{barcode} and a.del_flag = '0'and rownum=1
    </select>
</mapper>